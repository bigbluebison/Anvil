"""initial

Revision ID: dc19f735d526
Revises: 
Create Date: 2025-05-15 20:30:46.807443

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dc19f735d526'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Pricing_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('oil_price', sa.Float(), nullable=True),
    sa.Column('methane_price', sa.Float(), nullable=True),
    sa.Column('helium_price', sa.Float(), nullable=True),
    sa.Column('ethane_price', sa.Float(), nullable=True),
    sa.Column('propane_price', sa.Float(), nullable=True),
    sa.Column('i_butane_price', sa.Float(), nullable=True),
    sa.Column('n_butane_price', sa.Float(), nullable=True),
    sa.Column('i_pentane_price', sa.Float(), nullable=True),
    sa.Column('n_pentane_price', sa.Float(), nullable=True),
    sa.Column('hexane_plus_price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Pricing_table'))
    )
    op.create_table('assumptions_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nri_before_payout', sa.Float(), nullable=False),
    sa.Column('nri_after_payout', sa.Float(), nullable=False),
    sa.Column('wi_before_payout', sa.Float(), nullable=False),
    sa.Column('wi_after_payout', sa.Float(), nullable=False),
    sa.Column('oil_price_deduct', sa.Float(), nullable=True),
    sa.Column('gas_price_deduct', sa.Float(), nullable=True),
    sa.Column('ngl_price_deduct', sa.Float(), nullable=True),
    sa.Column('primary_pipeline_fee', sa.Float(), nullable=True),
    sa.Column('secondary_pipeline_fee', sa.Float(), nullable=True),
    sa.Column('inlet_gas_fee', sa.Float(), nullable=True),
    sa.Column('ngl_processing_feee', sa.Float(), nullable=True),
    sa.Column('nat_gas_processor_share', sa.Float(), nullable=True),
    sa.Column('ngl_processor_share', sa.Float(), nullable=True),
    sa.Column('helium_processor_share', sa.Float(), nullable=True),
    sa.Column('severance_tax', sa.Float(), nullable=True),
    sa.Column('ad_valorem_tax', sa.Float(), nullable=True),
    sa.Column('capex_assumptions', sa.String(), nullable=False),
    sa.Column('gas_concentrations', sa.String(), nullable=True),
    sa.Column('refinery_assumptions', sa.String(), nullable=True),
    sa.Column('drilling_start_date', sa.String(), nullable=True),
    sa.Column('prod_start_date', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assumptions_table'))
    )
    op.create_table('production_curve_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_curve', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_production_curve_table'))
    )
    op.create_table('projects_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects_table'))
    )
    op.create_table('wells_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('production_curve_id', sa.Integer(), nullable=True),
    sa.Column('assumptions_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assumptions_id'], ['assumptions_table.id'], name=op.f('fk_wells_table_assumptions_id_assumptions_table')),
    sa.ForeignKeyConstraint(['production_curve_id'], ['production_curve_table.id'], name=op.f('fk_wells_table_production_curve_id_production_curve_table')),
    sa.ForeignKeyConstraint(['project_id'], ['projects_table.id'], name=op.f('fk_wells_table_project_id_projects_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wells_table'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wells_table')
    op.drop_table('projects_table')
    op.drop_table('production_curve_table')
    op.drop_table('assumptions_table')
    op.drop_table('Pricing_table')
    # ### end Alembic commands ###
